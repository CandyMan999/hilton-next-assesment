{"version":3,"file":"static/webpack/static/development/pages/index.js.f5754b2218da7b7f3d99.hot-update.js","sources":["webpack:///./components/Reservations/Reservations.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"../Card\";\nimport range from \"lodash/range\";\n\nclass Reservation extends Component {\n  state = {\n    largestRoom: 0,\n    rooms: [\n      { adults: 1, children: 0 },\n      { adults: 1, children: 0 },\n      { adults: 1, children: 0 },\n      { adults: 1, children: 0 }\n    ]\n  };\n  componentDidMount() {\n    const results = JSON.parse(window.localStorage.getItem(\"results\"));\n\n    if (results !== null) {\n      const remainingRooms = this.state.rooms.slice(\n        Number(results.largestRoom),\n        3\n      );\n      this.setState({\n        largestRoom: results.largestRoom,\n        rooms: [...results.rooms, ...remainingRooms]\n      });\n    }\n  }\n\n  handleChange = (e, name, index, checked) => {\n    if (name === \"largestRoom\" && !checked) {\n      const reamaining = this.state.rooms.slice(Number(index), 4);\n      reamaining.forEach(object => {\n        object.adults = 1;\n        object.children = 0;\n      });\n      console.log(\"!!!\", reamaining);\n      console.log(\"lenght:\", this.state.rooms.length, \"index: \", index - 1);\n      this.setState({\n        [name]: e.target.value - 1,\n        rooms: [...this.state.rooms.slice(0, index), ...reamaining]\n      });\n    }\n\n    if (name === \"largestRoom\" && checked) {\n      this.setState({ [name]: Number(e.target.value) });\n    }\n    if (name === \"children\" || name === \"adults\") {\n      this.setState({\n        rooms: [\n          ...this.state.rooms.slice(0, index),\n          { ...this.state.rooms[index], [name]: Number(e.target.value) },\n          ...this.state.rooms.slice(index + 1)\n        ]\n      });\n    }\n  };\n\n  handleSubmit = () => {\n    alert(\n      `you have just booked ${this.state.largestRoom +\n        1} rooms, refresh the page to see saved changes`\n    );\n    window.localStorage.clear();\n    const results = {};\n\n    //this is unnecessary for this application but if it was a realworld app you would only want to save the data of the rooms booked\n    // to the database\n    results.rooms = this.state.rooms.slice(\n      0,\n      Number(this.state.largestRoom) + 1\n    );\n    results.largestRoom = this.state.largestRoom;\n    window.localStorage.setItem(\"results\", JSON.stringify(results));\n  };\n\n  render() {\n    return (\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            justifyContent: \"space-between\"\n          }}\n        >\n          {range(4).map(roomId => (\n            <Card\n              key={roomId}\n              values={this.state.rooms[roomId]}\n              largestRoom={this.state.largestRoom}\n              index={roomId}\n              handleChange={this.handleChange}\n            />\n          ))}\n        </div>\n        <button style={buttonStyle} onClick={this.handleSubmit}>\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n\nconst buttonStyle = {\n  backgroundColor: \"blue\",\n  height: \"50px\",\n  width: \"150px\",\n  margin: \"10px\",\n  color: \"white\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  borderRadius: \"5px\"\n};\nexport default Reservation;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AACA;AAuBA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAOA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AACA;AAAA;AAIA;AACA;AACA;AACA;;;;;;AA7DA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAFA;AAIA;AACA;;;AAiDA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AADA;AAOA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AAAA;AAAA;AAKA;;;;AAjGA;AACA;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;;;;A","sourceRoot":""}